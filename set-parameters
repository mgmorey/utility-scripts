#!/bin/sh -eu

# set-parameters: print shell commands to set parameters
# Copyright (C) 2020  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort '%s: Assertion failed: %s\n' "$script" "$*"
}

parse_arguments() {
    shell=$SHELL

    while getopts s:h opt; do
	case $opt in
	    (s)
		parse_shell "$OPTARG"
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $# -gt 0 ]; then
	usage_error '%s: Too many arguments\n' "$script"
    fi
}

set_parameters() {
    "${script_prefix}set-profile-parameters" -s $shell || true
    "${script_prefix}set-askpass-parameters" -s $shell || true
    "${script_prefix}set-proxy-parameters" -s $shell || true
}

usage() {
    cat <<-EOF >&2
Usage: $0: [-s SHELL]
       $0: -h
EOF
}

script=$(basename "$0")

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}parameter-functions.sh"

eval $("${script_prefix}get-os-release" -x)
parse_arguments "$@"
set_parameters
