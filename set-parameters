#!/bin/sh -eu

# set-parameters: print shell commands to set profile parameters
# Copyright (C) 2020  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

parse_arguments() {
    shell=$SHELL

    while getopts s:h opt; do
	case $opt in
	    (s)
		shell=$OPTARG
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))
}

set_parameters() {
    validate_arguments
    "${script_prefix}set-askpass-parameters" -s $shell || true
    "${script_prefix}set-profile-parameters" -s $shell || true
    "${script_prefix}set-proxy-parameters" -s $shell || true
}

usage() {
    cat <<-EOF >&2
Usage: $0: [-s SHELL]
       $0: -h
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf "%s\n" '' >&2
    usage
    exit 2
}

validate_arguments() {
    case $(basename ${shell%.exe}) in
	(*bash|ksh*|zsh)
	    true
	    ;;
	(csh|tcsh)
	    true
	    ;;
	(fish)
	    true
	    ;;
	(sh)
	    true
	    ;;
	(*)
	    abort "%s: %s: Shell not supported\n" "$0" "$shell"
	    ;;
    esac
}

case "$0" in
    (*/*)
	script_dir=$(get_realpath "$(dirname "$0")")
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

eval $("${script_prefix}get-os-release" -x)

parse_arguments "$@"
set_parameters
