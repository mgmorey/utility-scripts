#!/bin/sh -eu

# set-askpass: print shell commands to set askpass parameters
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

COMMANDS="git ssh sudo"

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_askpass_helper() {
    "${script_prefix}get-askpass-helper" \
	${desktop_name:-$("${script_prefix}get-desktop-name")}
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

parse_arguments() {
    desktop_name=
    shell=

    while getopts d:s:h opt; do
	case $opt in
	    (d)
		desktop_name=$OPTARG
		;;
	    (s)
		case $(basename $OPTARG) in
		    (*bash|ksh*|zsh)
			shell=$OPTARG
			;;
		    (csh|tcsh)
			shell=$OPTARG
			;;
		    (fish)
			shell=$OPTARG
			;;
		    (sh)
			shell=$OPTARG
			;;
		    (*)
			usage_error "%s: %s: Unsupported shell\n" "$0" "$OPTARG"
			;;
		esac
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    for command; do
	case "$command" in
	    (git|ssh|sudo)
		true
		;;
	    (*)
		usage_error "%s: %s: Unsupported command\n" "$0" "$command"
	esac
    done

    commands="$*"
}

set_askpass_parameters() {
    askpass_helper=$(get_askpass_helper | awk '! /^#/')

    if [ -z "$askpass_helper" ]; then
	exit 0
    elif [ ! -x "$askpass_helper" ]; then
	exit 0
    fi

    for command in ${commands:-$COMMANDS}; do
	case "$command" in
	    (git|ssh|sudo)
		var=$(printf "%s\n" ${command}_askpass | to_upper)

		case $(basename ${shell:-${SHELL%.exe}}) in
		    (*bash|ksh*|zsh)
			printf 'export %s="%s"\n' "$var" "$askpass_helper"
			;;
		    (csh|tcsh)
			printf 'setenv %s "%s";\n' "$var" "$askpass_helper"
			;;
		    (fish)
			printf 'set -x %s "%s"\n' "$var" "$askpass_helper"
			;;
		    (sh)
			printf '%s="%s"\n' "$var" "$askpass_helper"
			printf 'export %s\n' "$var"
			;;
		    (*)
			true
			;;
		esac
		;;
	    (*)
		abort "%s: %s: Unsupported command\n" "$0" "$command"
	esac
    done
}

to_upper() {
    tr '[:lower:]' '[:upper:]'
}

usage() {
    cat <<EOF >&2
Usage: $0: [-s SHELL]
       $0: -h
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf "%s\n" '' >&2
    usage
    exit 2
}

case "$0" in
    (*/*)
	script_dir=$(get_realpath "$(dirname "$0")")
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

parse_arguments "$@"
set_askpass_parameters
