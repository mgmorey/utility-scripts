#!/bin/sh -eu

# set-askpass-parameters: print shell commands to set askpass parameters
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

COMMANDS="git ssh sudo"

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort '%s: Assertion failed: %s\n' "$script" "$*"
}

configure_platform() {
    askpass_helper=$(get_askpass_helper | awk '! /^#/')
}

get_all_parameters() {
    for command in ${commands:-$COMMANDS}; do
	printf '%s\n' ${command}_askpass | to_upper
    done
}

get_askpass_helper() {
    "${script_prefix}get-askpass-helper" \
	${desktop_name:-$("${script_prefix}get-desktop-name")}
}

parse_arguments() {
    commands=
    desktop_name=
    no_export=false
    shell=$SHELL

    while getopts d:ns:h opt; do
	case $opt in
	    (d)
		desktop_name=$OPTARG
		;;
	    (n)
		no_export=true
		;;
	    (s)
		parse_shell "$OPTARG"
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    for command; do
	parse_command "$command"
    done
}

parse_command() {
    case "$1" in
	(git|ssh|sudo)
	    commands=${commands:+$commands }"$1"
	    ;;
	(*)
	    usage_error '%s: %s: Unsupported command\n' "$script" "$1"
    esac
}

print_askpass_parameters() {
    for var in $(get_all_parameters); do
	print_parameter "$var" "$askpass_helper"
    done
}

set_askpass_parameters() {
    configure_platform

    if [ -z "$askpass_helper" ]; then
	exit 0
    elif [ ! -x "$askpass_helper" ]; then
	exit 0
    fi

    print_askpass_parameters $(get_all_parameters)
}

to_upper() {
    tr '[:lower:]' '[:upper:]'
}

usage() {
    cat <<EOF >&2
Usage: $script: [-s SHELL] [COMMAND [...]]
       $script: -n [COMMAND [...]]
       $script: -h
EOF
}

script=$(basename "$0")

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}parameter-functions.sh"

parse_arguments "$@"
set_askpass_parameters
