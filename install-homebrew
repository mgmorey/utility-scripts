#!/bin/sh -eu

# install-homebrew: install the HomeBrew package manager brew
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

BASE_URL=https://raw.githubusercontent.com
HOMEBREW_URL=$BASE_URL/Homebrew/install/HEAD/install.sh
LINUXBREW_URL=$BASE_URL/Homebrew/install/master/install.sh

abort() {
    printf "$@" >&2
    exit 1
}

abort_not_supported() {
    abort '%s: %s: %s not supported\n' "$script" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort '%s: Assertion failed: %s\n' "$script" "$*"
}

get_packages() {
    get-packages bootstrap
    get-packages -s dependencies homebrew
}

install_homebrew() {
    if is_homebrew_installed; then
	return 0
    fi

    for id in $ID $ID_LIKE; do
	case "$id" in
	    (centos)
		case "$VERSION_ID" in
		    (7)
			install_linuxbrew
			break
			;;
		    (8)
			install_linuxbrew
			break
			;;
		    (*)
			break
			;;
		esac
		;;
	    (debian)
		case "$VERSION_ID" in
		    (10)
			install_linuxbrew
			break
			;;
		    (11)
			install_linuxbrew
			break
			;;
		    (*)
			break
			;;
		esac
		;;
	    (fedora)
		install_linuxbrew
		break
		;;
	    (opensuse)
		install_linuxbrew
		break
		;;
	    (rhel|ol)
		case "$VERSION_ID" in
		    (7.*)
			install_linuxbrew
			break
			;;
		    (8.*)
			install_linuxbrew
			break
			;;
		    (*)
			break
			;;
		esac
		;;
	    (ubuntu)
		case "$VERSION_ID" in
		    (18.04)
			brew
			break
			;;
		    (20.04)
			brew
			break
			;;
		    (20.10)
			brew
			break
			;;
		    (*)
			break
			;;
		esac
		;;
	    (macos)
		/bin/bash -c "$(curl -fsSL $HOMEBREW_URL)"
		break
		;;
	esac
    done
}

install_linuxbrew() {
    umask 0022
    install_script="${TMPDIR-/tmp}/install-homebrew.sh"
    curl -fsSL $LINUXBREW_URL >"$install_script"
    chmod a+x "$install_script"
    cat <<EOF
Please copy and paste the following command into a shell to install Homebrew:
/bin/bash -c "$install_script"
EOF
}

is_homebrew_installed() {
    brew=$(which brew 2>/dev/null || true)

    if [ -n "$brew" ]; then
	if [ "$kernel_name" = Linux -a "$brew" = /usr/bin/brew ]; then
	    if [ -x $HOME/.linuxbrew ]; then
		return 0
	    elif [ -x /home/linuxbrew ]; then
		return 0
	    fi
	else
	    return 0
	fi
    fi

    return 1
}

preinstall_homebrew() {
    validate_platform

    case "$kernel_name" in
	(Linux)
	    packages=$(get_packages | sort -u)
	    pattern=$(get-packages -s pattern development)
	    install-packages ${pattern:+-p "$pattern" }$packages
	    ;;
	(Darwin)

	    true
	    ;;
    esac
}

usage_error() {
    printf "$@" >&2
    exit 2
}

validate_platform() {
    for id in $ID $ID_LIKE; do
	case "$id" in
	    (centos)
		case "$VERSION_ID" in
		    (8)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (debian)
		case "$VERSION_ID" in
		    (10)
			return
			;;
		    (11)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (fedora)
		return
		;;
	    (opensuse)
		return
		;;
	    (rhel|ol)
		case "$VERSION_ID" in
		    (7.*)
			return
			;;
		    (8.*)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (ubuntu)
		case "$VERSION_ID" in
		    (18.04)
			return
			;;
		    (20.04)
			return
			;;
		    (20.10)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (macos)
		return
		;;
	esac
    done

    abort_not_supported "Operating system"
}

script=$(basename "$0")

if [ $# -gt 0 ]; then
    usage_error '%s: Too many arguments\n' "$script"
fi

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}common-functions.sh"

set_user_profile "$script_dir"
eval $(get-os-release -x)
preinstall_homebrew

if [ "$(id -u)" -eq 0 ]; then
    run_unpriv /bin/sh -c "$0 $*"
else
    install_homebrew
fi
