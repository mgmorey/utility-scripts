#!/bin/sh -u

# install-homebrew: install the HomeBrew package manager brew
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

BASE_URL=https://raw.githubusercontent.com
HOMEBREW_URL=$BASE_URL/Homebrew/install/master/install
LINUXBREW_URL=$BASE_URL/Linuxbrew/install/master/install.sh

abort() {
    printf "$@" >&2
    exit 1
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$0" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

configure_platform() {
    case "$kernel_name" in
	(Darwin)
	    PKG_DIR=/Library/Developer/CommandLineTools/Packages/
	    PKG_NAME=macOS_SDK_headers_for_macOS_10.14.pkg
	    ;;
    esac
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

install_homebrew() {
    validate_platform
    configure_platform

    if brew --version >/dev/null 2>&1; then
	brew update
	brew upgrade
    else
	preinstall_homebrew

	case "$kernel_name" in
	    (Darwin)
		/usr/bin/ruby -e "$(curl -fsSL $HOMEBREW_URL)"
		;;
	    (Linux)
		run_unpriv /bin/sh -c "$(curl -fsSL $LINUXBREW_URL)"
		;;
	esac
    fi
}

preinstall_homebrew() {
    case "$kernel_name" in
	(Darwin)
	    installer -allowUntrusted -pkg $PKG_DIR/$PKG_NAME -target /
	    ;;
	(Linux)
	    install-build-essentials
	    install-packages $(get-homebrew-packages)
	    ;;
    esac
}

validate_platform() {
    case "$kernel_name" in
	(Darwin)
	    :
	    ;;
	(Linux)
	    :
	    ;;
	(*)
	    abort_not_supported "Operating system"
	    ;;
    esac
}

if [ $# -gt 0 ]; then
    abort "%s: Too many arguments\n" "$0"
fi

script_dir=$(get_realpath "$(dirname "$0")")

. "$script_dir/common-functions.sh"

set_user_profile "$script_dir"
eval $(get-os-release -x)
install_homebrew
