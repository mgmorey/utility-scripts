#!/bin/sh -eu

# install-startup-files: install startup files in home directory
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

BASE_URL=https://%s@github.com/mgmorey
PROJECT_NAME=startup-files

PROJECT_URL=$BASE_URL/$PROJECT_NAME.git

STARTUP_FILES=".editorconfig .profile"
STARTUP_FILES_LEGACY=".bash_profile .emacs"

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_gnu_diff_command() {
    for id in $ID $ID_LIKE; do
	case "$id" in
	    (solaris)
		printf "%s\n" gdiff
		break
		;;
	esac
    done

    printf "%s\n" diff
}

get_gnu_install_command() {
    for id in $ID $ID_LIKE; do
	case "$id" in
	    (solaris)
		printf "%s\n" ginstall
		break
		;;
	esac
    done

    printf "%s\n" install
}

get_project_directory() {
    if [ -d "$HOME/Documents" ]; then
	printf "%s\n" "$HOME/Documents/git"
    else
	printf "%s\n" "$HOME/git"
    fi
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

install_startup_files() {
    git_dir=$(get_project_directory)
    gnu_diff=$(get_gnu_diff_command)
    gnu_install=$(get_gnu_install_command)

    cd "$(dirname "$git_dir")"
    mkdir -p git
    cd git

    if [ ! -d $PROJECT_NAME ]; then
	git clone $(printf "$PROJECT_URL\n" "$(get_real_user)")
    fi

    cd

    for file in $STARTUP_FILES; do
	if is_to_be_installed $file; then
	    printf "Installing %s\n" $file

	    if [ -r /etc/skel/$file -a "$file" = .profile ]; then
		$gnu_install -bm 644 /etc/skel/$file $file
		cat $git_dir/$PROJECT_NAME/$file >>$file
	    else
		$gnu_install -bm 644 $git_dir/$PROJECT_NAME/$file $file
	    fi
	fi
    done

    if [ ! -d .emacs.d ]; then
	printf "Creating %s\n" .emacs.d
	mkdir .emacs.d
    fi

    if [ -d .emacs.d ]; then
	cd .emacs.d

	if [ ! -e init.el ]; then
	    printf "Installing %s\n" .emacs.d/init.el
	    $gnu_install -bm 644 $git_dir/$PROJECT_NAME/.emacs.d/init.el init.el
	fi
    fi

    cd

    for file in $STARTUP_FILES_LEGACY; do
	if [ -e $file ]; then
	    printf "Renaming %s to %s\n" $file $file.orig
	    /bin/mv -f $file $file.orig
	fi
    done

    printf "Please log out and back in again to activate the new environment.\n"
}

is_to_be_installed() {
    if [ ! -r $1 ]; then
	return 0;
    elif [ ! -r /etc/skel/$1 ]; then
	return 1
    else
	$gnu_diff -qs /etc/skel/$1 $1
    fi
}

case "$0" in
    (*/*)
	script_dir=$(get_realpath "$(dirname "$0")")
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}common-functions.sh"

eval $("${script_prefix}get-os-release" -x)

install_startup_files
