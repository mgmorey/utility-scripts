#!/bin/sh -eu

# git-credential-helper: configure git credential helper
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

RE='/git-credential-(gnome-keyring|libsecret|netrc|osxkeychain|wincred)(\.c|)$'

abort() {
    printf "$@" >&2
    exit 1
}

get_helper() {
    git config --global --get credential.helper
}

set_helper() {
    if [ -n "$1" ]; then
	if [ ! -x "$1" -a -r "$1.c" ]; then
	    cd $(dirname "$1") && sudo make $(basename "$1")
	fi
	if [ -x "$1" ]; then
	    git config --global credential.helper "$1"
	else
	    abort "%s: No such executable file\n" "$1"
	fi
    else
	abort "No executable file\n"
    fi
}

query_helpers() {
    distro_name=$(get-distro-name)
    platform_name=$(get-platform-name)

    case "$platform_name" in
	(Linux)
	    case "$distro_name" in
		(debian|fedora|ubuntu)
		    package=git
		    ;;
		(opensuse-*)
		    package=git-credential-libsecret
		    ;;
		(*)
		    abort "%s: Distro not supported\n" "$distro_name"
		    ;;
	    esac

	    printf "# Files in package %s:\n" $package
	    get-package-filenames $package | egrep "$RE" | sed -e 's/.c$//g'
	    ;;
	(CYGWIN_NT-*)
	    printf "# Files in package %s:\n" git
	    printf "%s\n" /usr/libexec/git-core/git-credential-manager
	    ;;
	(*)
	    abort "%s: Platform not supported\n" "$platform_name"
	    ;;
    esac
}

if [ $# -eq 1 ]; then
    if [ "$1" = -q ]; then
	query_helpers
    else
	set_helper "$1"
    fi
elif [ $# -eq 0 ]; then
    get_helper
else
    abort "Invalid number of arguments\n"
fi
