#!/usr/bin/env python3

# get-configuration: print application configuration parameters
# Copyright (C) 2020  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

"""Print application configuration parameters."""

import argparse
import configparser

TRANSLATE = str.maketrans('-', '_')


def format_key(key: str, prefix: str):
    """Format application configuration parameter key."""
    return '_'.join([prefix, key]).translate(TRANSLATE).upper()


def format_pair(key: str, value: str, prefix: str):
    """Format application configuration parameter key and value."""
    return "{0}='{1}'".format(format_key(key, prefix), value)


def parse_args():
    """Parse script arguments."""
    description = 'Print application configuration parameters'
    parser = argparse.ArgumentParser(description=description)
    parser.add_argument('files',
                        metavar='FILES',
                        nargs='*',
                        help='read from files FILES')
    parser.add_argument('--prefix',
                        metavar='PREFIX',
                        nargs='?',
                        help='prepend string PREFIX')
    parser.add_argument('--sections',
                        metavar='SECTIONS',
                        nargs='*',
                        help='read sections SECTIONS')
    return parser.parse_args()


def main():
    """Print configuration parameters."""
    args = parse_args()
    config = configparser.ConfigParser()

    for filename in args.files:
        config.read(filename)

        for section in (args.sections if args.sections else config.sections()):
            prefix = args.prefix if args.prefix else section

            for key, value in config[section].items():
                print(format_pair(key, value, prefix))


if __name__ == '__main__':
    main()
