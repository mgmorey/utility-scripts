#!/bin/sh -eu

# get-postgresql-packages: get list of postgres packages
# Copyright (C) 2020  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

CATEGORIES="postgresql-client postgresql-contrib postgresql-devel \
postgresql-server python-postgresql"

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_postgresql_packages() {
    "${script_prefix}get-packages" $categories
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath || true)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

parse_arguments() {
    categories=

    for arg; do
	case $arg in
	    (all)
		categories=
		;;
	    (client)
		categories="${categories+$categories postgresql-client}"
		;;
	    (contrib)
		categories="${categories+$categories postgresql-contrib}"
		;;
	    (devel)
		categories="${categories+$categories postgresql-devel}"
		;;
	    (odbc)
		categories="${categories+$categories postgresql-odbc}"
		;;
	    (python)
		categories="${categories+$categories python-postgresql}"
		;;
	    (server)
		categories="${categories+$categories postgresql-server}"
		;;
	    (*)
		abort "%s: %s -- invalid argument\n" "$0" "$arg"
	esac
    done

    if [ -z "$categories" ]; then
	categories=$CATEGORIES
    fi
}

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}common-functions.sh"

parse_arguments "$@"
get_postgresql_packages
