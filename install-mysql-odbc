#!/bin/sh -eu

# install-mysql-odbc: install MySQL ODBC packages
# Copyright (C) 2019  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

NAME_ANSI="MySQL ODBC 8.0 ANSI Driver"
NAME_UNICODE="MySQL ODBC 8.0 Unicode Driver"

OBJECT_ANSI=libmyodbc8a.so
OBJECT_UNICODE=libmyodbc8w.so

PKG_NAME=mysql-connector-odbc

abort() {
    printf "$@" >&2
    exit 1
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$0" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath || true)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

install_mysql_odbc() {
    validate_platform
    install-packages $(get-odbc-development-packages)
    install_platform
    postinstall_platform
}

install_platform() {
    case "$ID" in
	(debian|ubuntu)
	    if [ ! -d $prefix ]; then
		tar -C /opt -xf $tarpath
		/bin/mv -f /opt/$basename $prefix
	    fi

	    chown -R root:root $prefix

	    for file in $prefix/bin/*; do
		ln -sf $file /usr/local/bin
	    done
	    ;;
	(rhel|ol|centos)
	    if ! rpm -q $PKG_NAME >/dev/null 2>&1; then
		rpm -ihv $rpmpath
	    fi
	    ;;
    esac
}

parse_arguments() {
    case "$ID" in
	(centos)
	    case "$VERSION_ID" in
		(7)
		    rpmfile=${PKG_NAME}-8.0.*-*.el7.x86_64.rpm
		    ;;
		(8)
		    rpmfile=${PKG_NAME}-8.0.*-*.el8.x86_64.rpm
		    ;;
	    esac
	    ;;
	(rhel|ol)
	    case "$VERSION_ID" in
		(7.*)
		    rpmfile=${PKG_NAME}-8.0.*-*.el7.x86_64.rpm
		    ;;
		(8.*)
		    rpmfile=${PKG_NAME}-8.0.*-*.el8.x86_64.rpm
		    ;;
	    esac
	    ;;
	(*)
	    tarfile=${PKG_NAME}-8.0.*-linux-$ID$VERSION_ID-x86-64bit.tar.gz
	    ;;
    esac

    case "$ID" in
	(debian|ubuntu)
	    case "$(basename "$1")" in
		($tarfile)
		    tarpath=$1
		    tarfile=$(basename $tarpath)
		    basename=${tarfile%.tar.gz}
		    package=${basename%-linux-*-x86-64bit}
		    prefix=/opt/$package
		    ;;
		(*)
		    abort "%s: invalid argument" "$1"
	    esac
	    ;;
	(rhel|ol|centos)
	    case "$(basename "$1")" in
		($rpmfile)
		    rpmpath=$1
		    rpmfile=$(basename $rpmpath)
		    basename=${rpmfile%.rpm}
		    package=${basename%-linux-*-x86_64}
		    ;;
		(*)
		    abort "%s: invalid argument" "$1"
	    esac
	    ;;
    esac
}

postinstall_platform() {
    case "$ID" in
	(debian|ubuntu)
	    for encoding in ANSI UNICODE; do
		eval name="\$NAME_$encoding"
		eval object="\$OBJECT_$encoding"
		driver=$prefix/lib/$object
		$prefix/bin/myodbc-installer -r -d -n "$name"
		$prefix/bin/myodbc-installer -a -d -n "$name" -t Driver="$driver"
	    done
	    ;;
    esac
}

usage_error() {
    printf "$@" >&2
    exit 2
}

validate_platform() {
    case "$ID" in
	(centos)
	    case "$VERSION_ID" in
		(7)
		    return
		    ;;
		(8)
		    return
		    ;;
	    esac
	    ;;
	(debian|raspbian)
	    case "$VERSION_ID" in
		(10)
		    return
		    ;;
	    esac
	    ;;
	(rhel|ol)
	    case "$VERSION_ID" in
		(7.*)
		    return
		    ;;
		(8.*)
		    return
		    ;;
	    esac
	    ;;
	(ubuntu)
	    case "$VERSION_ID" in
		(18.04)
		    return
		    ;;
		(20.04)
		    return
		    ;;
		(20.10)
		    return
		    ;;
	    esac
	    ;;
	(*)
	    abort_not_supported "Operating system"
	    ;;
    esac
}

if [ $# -lt 1 ]; then
    usage_error "%s: Not enough arguments\n" "$0"
elif [ $# -gt 1 ]; then
    usage_error "%s: Too many arguments\n" "$0"
fi

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}common-functions.sh"

set_user_profile "$script_dir"
eval $(get-os-release -x)
parse_arguments "$@"
install_mysql_odbc
