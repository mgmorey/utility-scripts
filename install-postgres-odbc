#!/bin/sh

# install-postgres-odbc: install PostgreSQL ODBC packages
# Copyright (C) 2019  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

NAME_ANSI="PostgreSQL ANSI"
NAME_UNICODE="PostgreSQL Unicode"

OBJECT_ANSI=psqlodbca.so
OBJECT_UNICODE=psqlodbcw.so

ODBC_INIFILE=/etc/odbcinst.ini

abort() {
    printf "$@" >&2
    exit 1
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$0" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

configure_platform() {
    case "$ID" in
	(debian|ubuntu)
	    libdir=/usr/lib/x86_64-linux-gnu/odbc
	    ;;
	(rhel|ol)
	    libdir=/usr/lib64
	    ;;
    esac
}

get_packages() {
    (get-odbc-development-packages
     get-postgres-odbc-packages) | sort -u
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

install_odbc_driver() {
    if egrep '^[PostgreSQL .+]$' $ODBC_INIFILE >/dev/null 2>&1; then
	return 0
    fi

    cat >>$ODBC_INIFILE <<EOF
[$2]
Driver=$1

EOF
}

install_postgres_odbc() {
    validate_platform
    configure_platform
    if install-pgdg; then
	install-packages $(get_packages)
	postinstall_platform
    fi
}

postinstall_platform() {
    case "$ID" in
	(debian|ubuntu)
	    if [ -d $libdir ]; then
		for file in $libdir/*.so; do
		    ln -sf $file /usr/local/lib
		done
	    fi
	    ;;
	(rhel|ol)
	    for encoding in ANSI UNICODE; do
		eval name="\$NAME_$encoding"
		eval object="\$OBJECT_$encoding"
		install_odbc_driver $libdir/$object "$name"
	    done
	    ;;
    esac
}

validate_platform() {
    case "$ID" in
	(debian)
	    case "$VERSION_ID" in
		(10)
		    return
		    ;;
		(*)
		    break
		    ;;
	    esac
	    ;;
	(rhel|ol)
	    case "$VERSION_ID" in
		(8.*)
		    return
		    ;;
		(*)
		    return
		    ;;
	    esac
	    ;;
	(ubuntu)
	    case "$VERSION_ID" in
		(18.04)
		    return
		    ;;
		(19.10)
		    return
		    ;;
		(*)
		    break
		    ;;
	    esac
	    ;;
    esac

    abort_not_supported "Operating system"
}

if [ $# -gt 0 ]; then
    abort "%s: Too many arguments\n" "$0"
fi

script_dir=$(get_realpath "$(dirname "$0")")

. "$script_dir/common-functions.sh"

set_user_profile "$script_dir"
eval $(get-os-release -x)
install_postgres_odbc
