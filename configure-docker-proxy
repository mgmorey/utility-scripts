#!/bin/sh -eu

# configure-docker-proxy: configure Docker proxy settings
# Copyright (C) 2021  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

INPUT=-
OUTPUT=/etc/systemd/system/docker.service.d/http-proxy.conf

configure_docker_proxy()
{
    tmpfile=$(mktemp)
    trap "/bin/rm -f $tmpfile" EXIT INT QUIT TERM

    printf '[%s]\n' "Service" >$tmpfile

    case "$input" in
	(-)
	    cat
	    ;;
	(*)
	    cat "$input"
	    ;;
    esac | grep -E '^(HTTP|NO)_PROXY=' | while read statement; do
	printf 'Environment="%s"\n' "$statement" >>$tmpfile
    done

    if [ "$(wc -l <$tmpfile)" -gt 1 ]; then
	if [ "$output" != - -a -w "$output" ]; then
            mkdir -p "$(dirname "$output")"
            chmod a+r $tmpfile
            /bin/mv -f $tmpfile "$output"
            systemctl daemon-reload

	    if systemctl status docker >/dev/null; then
		systemctl restart docker
	    fi
	else
            cat $tmpfile
	fi
    fi
}

is_valid_input_file() {
    case "$1" in
	(-)
	    true
	    ;;
	(*)
	    test -f "$1" -a -r "$1"
	    ;;
    esac
}

is_valid_output_file() {
    case "$1" in
	(-)
	    true
	    ;;
	(*)
	    if [ ! -e "$1" ]; then
		test -w "$(dirname "$1")"
	    elif [ -f "$1" ]; then
		test -w "$1"
	    else
		false
	    fi
	    ;;
    esac
}

parse_arguments() {
    input=$INPUT
    output=$OUTPUT

    while getopts i:o:h opt; do
	case $opt in
	    (i)
		input="$OPTARG"
		;;
	    (o)
		output="$OPTARG"
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $# -gt 0 ]; then
	usage_error "%s: Too many arguments\n" "$script"
    fi
}

parse_input_file() {
    if is_valid_input_file "$1"; then
	input="$1"
    else
	usage_error "%s: %s: Invalid input file\n" "$script" "$1"
    fi
}

parse_output_file() {
    if is_valid_output_file "$1"; then
	input="$1"
    else
	usage_error "%s: %s: Invalid output file\n" "$script" "$1"
    fi
}

usage() {
    cat <<EOF >&2
Usage: $script [-i INPUT] [-o OUTPUT]
       $script -h
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf '%s\n' '' >&2
    usage
    exit 2
}

script=$(basename "$0")
parse_arguments "$@"
configure_docker_proxy
