#!/bin/sh -eu

# get-askpass: print filename of SSH "askpass" helper binary
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

RE='/.+/(bin|lib|libexec)/.+(askpass|askpass2)$'

abort() {
    printf "$@" >&2
    exit 1
}

abort_desktop_not_supported() {
    abort "%s: %s: Desktop not supported\n" "$0" "$desktop_name"
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$0" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
    	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

if [ "${XDG_SESSION_TYPE-}" = tty ]; then
    abort "%s: Teletype has no desktop\n" "$0"
fi

if [ -z "${DISPLAY-}" ]; then
    abort "%s: No DISPLAY variable set\n" "$0"
fi

script_dir=$(get_realpath "$(dirname "$0")")

desktop_name=$("$script_dir/get-desktop-name")

if [ -z "$desktop_name" ]; then
    exit 1
fi

eval $("$script_dir/get-os-release" -X)

case "$kernel_name" in
    (Linux|GNU)
	case "$ID" in
	    (debian|raspbian|ubuntu)
		case "$desktop_name" in
		    (GNOME*|*:GNOME|'')
			package=ssh-askpass-gnome
			;;
		    (KDE*)
			package=ksshaskpass
			;;
		    (*)
			abort_desktop_not_supported
			;;
		esac
		;;
	    (opensuse-*)
		case "$desktop_name" in
		    (GNOME*|*:GNOME|'')
			package=openssh-askpass-gnome
			;;
		    (KDE*)
			package=ksshaskpass5
			;;
		    (*)
			abort_desktop_not_supported
			;;
		esac
		;;
	    (fedora)
		case "$desktop_name" in
		    (GNOME*|*:GNOME|'')
			package=openssh-askpass
			;;
		    (KDE*)
			package=ksshaskpass
			;;
		    (*)
			abort_desktop_not_supported
			;;
		esac
		;;
	    (redhat|centos)
		case "$desktop_name" in
		    (GNOME*|*:GNOME|'')
			package=openssh-askpass
			;;
		    (KDE*)
			package=ksshaskpass
			;;
		    (*)
			abort_desktop_not_supported
			;;
		esac
		;;
	    (nixos)
		case "$desktop_name" in
		    (KDE*)
			askpass_helper=ksshaskpass
			;;
		    (*)
			abort_desktop_not_supported
			;;
		esac
		;;
	    (*)
		abort_not_supported Distro
		;;
	esac
	;;
    (FreeBSD)
	case "$desktop_name" in
	    (GNOME*|MATE|'')
		package=gnome-ssh-askpass
		;;
	    (KDE*)
		package=ksshaskpass
		;;
	    (*)
		abort_desktop_not_supported
		;;
	esac
	;;
    (SunOS)
	case "$ID" in
	    (openindiana)
		case "$desktop_name" in
		    (MATE|'')
			package=ssh-askpass
			;;
		    (*)
			abort_desktop_not_supported
			;;
		    esac
		;;
	    (*)
		abort_not_supported Distro
		;;
	esac
	;;
    (CYGWIN_NT-*)
	case "$desktop_name" in
	    (MATE|X-Cygwin|'')
		askpass_helper=/usr/libexec/gnome-ssh-askpass.exe
		;;
	    (*)
		abort_desktop_not_supported
		;;
	esac

	if [ -x "$askpass_helper" ]; then
	    printf "%s\n" "${askpass_helper%.exe}"
	    exit 0
	else
	    abort "%s: No such askpass helper\n" "$askpass_helper"
	fi
	;;
    (*)
	abort_not_supported "Operating system"
	;;
esac

if [ -z "${askpass_helper:-}" ]; then
    askpass_helper=$("$script_dir/get-package-filenames" $package | grep -E "$RE" | head -n 1)
fi

if [ -n "$askpass_helper" ]; then
    if [ -x "$(which "$askpass_helper")" ]; then
	if [ -n "${package:-}" ]; then
	    printf "# %s package %s:\n" "$PRETTY_NAME" $package
	fi

	printf "%s\n" "${askpass_helper%.exe}"
    else
	abort "%s: No such askpass helper\n" "$askpass_helper"
    fi
fi
