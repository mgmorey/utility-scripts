#!/bin/sh -eu

# uninstall-app.sh: uninstall Python Flask application uWSGI service
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath || true)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

parse_arguments() {
    all=false

    while getopts ah opt; do
	case $opt in
	    (a)
		all=true
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $# -gt 0 ]; then
	usage_error "%s: Too many arguments\n" "$0"
    fi
}

remove_service() {
    files="$APP_ETCDIR $APP_DIR"

    if [ $all = true ]; then
	files="$files $APP_VARDIR"

	if [ $APP_RUNDIR != /run -a $APP_RUNDIR != /var/run ]; then
	    files="$files $APP_RUNDIR"
	fi
    fi

    if [ "$(is_uwsgi_packaged)" = false ]; then
	binary=$(get_uwsgi_binary_path)
	plugin=$(get_uwsgi_plugin_path)

	if [ -n "${UWSGI_ETCDIR-}" ]; then
	    files="$files $UWSGI_ETCDIR"
	fi

	files="$files $binary ${plugin-}"
    fi

    remove_files $(get_symlinks) $files
}

uninstall_app() {
    for dryrun in true false; do
	if [ $dryrun = false ] && is_app_running; then
	    control_app stop
	fi

	remove_service
    done

    printf "Service %s uninstalled successfully\n" $APP_NAME
}

usage() {
    cat <<EOF >&2
Usage: $0: [-h] [-p]
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf "%s\n" '' >&2
    usage
    exit 2
}

case "$0" in
    (*/*)
	script_dir=$(get_realpath "$(dirname "$0")")
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}common-functions.sh"
. "${script_prefix}utility-functions.sh"
. "${script_prefix}restapi-functions.sh"
. "${script_prefix}restapi-parameters.sh"

set_user_profile "$script_dir"
parse_arguments "$@"
configure_baseline
uninstall_app
