#!/bin/sh

# install-presto-server: install Presto server packages
# Copyright (C) 2020  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

BASE_URL=https://repo1.maven.org/maven2/io/prestosql
PRESTO_VERSION=336

MACOS_HOMEBREW_PKGS=prestosql
OPENSUSE_PKGS=java-11-openjdk-devel
REDHAT_PKGS=java-11-openjdk-devel

RPM_PKG=presto-server-rpm
TAR_PKG=presto-server

abort() {
    printf "$@" >&2
    exit 1
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$0" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

get_presto_rpm_file() {
    printf '%s\n' $RPM_PKG-$PRESTO_VERSION.rpm
}

get_presto_rpm_url() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]
    printf '%s\n' $BASE_URL/$RPM_PKG/$PRESTO_VERSION/$1
}

get_presto_tar_file() {
    printf '%s\n' $TAR_PKG-$PRESTO_VERSION.tar.gz
}

get_presto_tar_url() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]
    printf '%s\n' $BASE_URL/$TAR_PKG/$PRESTO_VERSION/$1
}

install_platform() {
    cd /tmp

    case "$ID" in
	(rhel|ol|centos)
	    install-packages $REDHAT_PKGS
	    install_package
	    ;;
	(opensuse-leap)
	    install-packages $OPENSUSE_PKGS
	    install_package
	    ;;
	(macos)
	    install-packages $MACOS_HOMEBREW_PKGS
	    ;;
	(*)
	    if which java >/dev/null; then
		install_tarball
	    fi
	    ;;
    esac
}

install_presto_server() {
    validate_platform
    install_platform
}

install_package() {
    if rpm -q $RPM_PKG >/dev/null 2>&1; then
	return
    fi

    rpm_file=$(get_presto_rpm_file)
    rpm_url=$(get_presto_rpm_url $rpm_file)
    curl --output $rpm_file $rpm_url
    rpm -ihv $rpm_file
    rm $rpm_file
}

install_tarball() {
    tar_file=$(get_presto_tar_file)
    tar_url=$(get_presto_tar_url $tar_file)
    curl --output $tar_file $tar_url
    tar xvf $tar_file
    mv ${tar_file%.tar.gz} /usr/local/opt
    rm $tar_file
}

usage_error() {
    printf "$@" >&2
    exit 2
}

validate_platform() {
    case "$ID" in
	(centos)
	    case "$VERSION_ID" in
		(7)
		    true
		    ;;
		(8)
		    true
		    ;;
		(*)
		    abort_not_supported Release
		    ;;
	    esac
	    ;;
	(rhel)
	    case "$VERSION_ID" in
		(7.*)
		    true
		    ;;
		(8.*)
		    true
		    ;;
		(*)
		    abort_not_supported Release
		    ;;
	    esac
	    ;;
	(macos)
	    case "$VERSION_ID" in
		(10.14.*)
		    true
		    ;;
		(10.15.*)
		    true
		    ;;
		(*)
		    abort_not_supported Release
		    ;;
	    esac
	    ;;
	(*)
	    abort_not_supported "Operating system"
	    ;;
    esac
}

if [ $# -gt 0 ]; then
    usage_error "%s: Too many arguments\n" "$0"
fi

script_basename="$(basename "$0")"
script_dirname="$(get_realpath "$(dirname "$0")")"

. "$script_dirname/common-functions.sh"

set_user_profile "$script_dirname"
eval $(get-os-release -x)
install_presto_server
