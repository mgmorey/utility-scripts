#!/bin/sh -eu

# get-installed-packages: get a list of installed packages
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

DPKG_AWK='$1 = "install" && $2 == "ok" && $3 == "installed" {print $4}'

FREEBSD_AWK='{
n = split($1, a, "-");

for(i = 1; i < n; i++) {
    if (i > 1) {
	printf("-%s", a[i])}
    else {
	printf("%s", a[i])
    }
}

printf("\n")
}'

PREFIX_AWK='{printf("%s%s\n", prefix, $0)}'

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_installed_packages() {
    managers=$("$script_dir/get-package-managers")
    prefix=

    for manager in $managers; do
	get_packages_using $manager | awk -v prefix=$prefix "$PREFIX_AWK"
	prefix=:
    done
}

get_packages_using() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]

    case "$1" in
	(apt-get|*/apt-get)
	    dpkg-query -Wf '${Status} ${Package}\n' | awk "$DPKG_AWK"
	    ;;
	(brew|*/brew)
	    run_unpriv -c "$1 list -1"
	    ;;
	(dnf|*/dnf)
	    $1 list installed | awk 'NF == 3 {print $1}' | awk -F. '{print $1}'
	    ;;
	(pkg|*/pkg)
	    case "$ID" in
		(freebsd)
		    $1 info | awk "$FREEBSD_AWK"
		    ;;
		(*)
		    $1 list -s | awk 'NR > 1 {print $1}'
		    ;;
	    esac
	    ;;
	(pkgin|*/pkgin)
	    $1 list | awk '{print $1}'
	    ;;
	(pkgutil)
	    $1 --list | awk '{print $1}'
	    ;;
	(yum|*/yum)
	    $1 list installed | awk 'NF == 3 {print $1}' | awk -F. '{print $1}'
	    ;;
	(zypper|*/zypper)
	    $1 -q search -i -t package | awk 'NR > 3 {print $3}'
	    ;;
    esac
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
    	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

get_setpriv_command() (
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]
    version="$(setpriv --version 2>/dev/null)"

    case "${version##* }" in
	('')
	    return 1
	    ;;
	([01].*)
	    return 1
	    ;;
	(2.[0-9].*)
	    return 1
	    ;;
	(2.[12][0-9].*)
	    return 1
	    ;;
	(2.3[012].*)
	    return 1
	    ;;
	(*)
	    options="--init-groups --reset-env"
	    ;;
    esac

    regid="$(id -u $1)"
    reuid="$(id -g $1)"
    printf "setpriv --reuid %s --regid %s %s\n" "$reuid" "$regid" "$options"
)

get_su_command() (
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]

    case "${kernel_name=$(uname -s)}" in
	(GNU|Linux)
	    if get_setpriv_command $1; then
		return 0
	    else
		options=-l
	    fi
	    ;;
	(Darwin|FreeBSD)
	    options=-l
	    ;;
	(*)
	    options=-
	    ;;
    esac

    printf "su %s %s\n" "$options" "$1"
)

run_unpriv() (
    assert [ $# -ge 1 ]

    if [ "$1" = -c ]; then
	sh_opts="$1"
	shift
    else
	sh_opts=
    fi

    if [ -n "${SUDO_USER-}" ] && [ "$(id -u)" -eq 0 ]; then
	su="$(get_su_command $SUDO_USER) $sh_opts"
    elif [ -n "$sh_opts" ]; then
	su="sh $sh_opts"
    else
	su=
    fi

    $su "$@"
)

script_dir=$(get_realpath "$(dirname "$0")")

eval $("$script_dir/get-os-release" -x)

get_installed_packages
