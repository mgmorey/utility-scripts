#!/bin/sh -eu

# get-installed-packages: get a list of installed packages
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

DPKG_AWK='$1 = "install" && $2 == "ok" && $3 == "installed" {print $4}'

FREEBSD_AWK='{
n = split($1, a, "-");

for(i = 1; i < n; i++) {
    if (i > 1) {
	printf("-%s", a[i])}
    else {
	printf("%s", a[i])
    }
}

printf("\n")
}'

PREFIX_AWK='{printf("%s%s\n", prefix, $0)}'

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_installed_packages() {
    managers=$("${script_prefix}get-package-managers")
    prefix=

    for manager in $managers; do
	if ! which $manager >/dev/null 2>&1; then
	    continue
	fi

	(get_packages_using $manager || true) | prefix_lines "$prefix"
	prefix=:
    done
}

get_packages_using() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]

    case "$(basename $1)" in
	(apt-get)
	    dpkg-query -Wf '${Status} ${Package}\n' | awk "$DPKG_AWK"
	    ;;
	(brew)
	    run_unpriv /bin/sh -c "$1 list --formula"
	    ;;
	(dnf|yum|zypper)
	    if [ $is_full = true ]; then
		rpm -qa
	    else
		rpm --queryformat "%{NAME}\n" -qa
	    fi
	    ;;
	(pkg)
	    case "$ID" in
		(freebsd)
		    $1 info --all | awk "$FREEBSD_AWK"
		    ;;
		(*)
		    $1 list | awk 'NR > 1 {print $1}'
		    ;;
	    esac
	    ;;
	(pkgin)
	    $1 list | awk '{print $1}'
	    ;;
	(pkgutil)
	    $1 --list | awk '{print $1}'
	    ;;
    esac
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath || true)

    if [ -n "$realpath" ]; then
    	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

parse_arguments() {
    is_full=false
    shell=$SHELL

    while getopts fh opt; do
	case $opt in
	    (f)
		is_full=true
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))
}

prefix_lines() {
    assert [ $# -eq 1 ]
    awk -v prefix=$1 "$PREFIX_AWK"
}

usage() {
    cat <<EOF >&2
Usage: $0 -f
       $0 -h
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf "%s\n" '' >&2
    usage
    exit 2
}

case "$0" in
    (*/*)
	script_dir=$(get_realpath "$(dirname "$0")")
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}common-functions.sh"

eval $("${script_prefix}get-os-release" -x)
parse_arguments "$@"
get_installed_packages
