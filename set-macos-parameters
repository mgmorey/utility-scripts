#!/bin/sh -eu

# set-macos-parameters: print shell commands to set macOS parameters
# Copyright (C) 2021  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

ALL_PARAMETERS="CPPFLAGS LDFLAGS MANPATH PATH SDKROOT"

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort '%s: Assertion failed: %s\n' "$script" "$*"
}

configure_platform() {
    xcrun=$(get_xcrun_command)
}

get_python_bins() (
    for version in 3.7 3.8 3.9 3.10; do
	if [ -d "$HOME/Library/Python/$version/bin" ]; then
	    printf '%s\n' "Library/Python/$version/bin"
	fi
    done
)

get_xcrun_command() (
    if [ -x /usr/bin/xcrun ]; then
	printf '%s\n' "/usr/bin/xcrun"
    fi
)

include_sdk_parameters() {
    MANPATH=${MANPATH:-$(manpath)}

    if [ -n "${xcrun-}" ]; then
	SDKROOT=$($xcrun --show-sdk-path)
	CPPFLAGS="${CPPFLAGS+$CPPFLAGS }-I$SDKROOT/usr/include/c++/v1"
	LDFLAGS="${LDFLAGS+$LDFLAGS }-L$SDKROOT/usr/lib"
    fi
}

include_python_directories() {
    # add Python binary directories to PATH (if they exist)
    for bin in $(get_python_bins); do
	if ! is_included "$HOME/$bin" "${PATH-}"; then
	    PATH="$HOME/$bin${PATH:+:$PATH}"
	fi
    done
}

parse_arguments() {
    no_export=false
    shell=$SHELL

    while getopts ns:h opt; do
	case $opt in
	    (n)
		no_export=true
		;;
	    (s)
		parse_shell "$OPTARG"
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $# -gt 0 ]; then
	usage_error '%s: Too many arguments\n' "$script"
    fi
}

set_macos_parameters() {
    case "$ID" in
	 (macos)
	    configure_platform
	    include_sdk_parameters
	    include_python_directories
	    print_parameters $ALL_PARAMETERS
	    ;;
    esac
}

usage() {
    cat <<-EOF >&2
Usage: $script: [-s SHELL]
       $script: -n
       $script: -h
EOF
}

script=$(basename "$0")

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}parameter-functions.sh"

eval $("${script_prefix}get-os-release" -x)
parse_arguments "$@"
set_macos_parameters
