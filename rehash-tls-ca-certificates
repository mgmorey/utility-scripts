#!/bin/sh -eu

# Copyright (C) 2022  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

abort() {
    printf "$@" >&2
    exit 1
}

abort_not_supported() {
    abort '%s: %s: %s not supported\n' "$script" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort '%s: Assertion failed: %s\n' "$script" "$*"
}

parse_arguments() {
    while getopts h opt; do
	case $opt in
	    (h)
		usage
		exit 0
		;;
	    (\?)
		usage_error
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $# -gt 1 ]; then
	usage_error '%s: Too many arguments\n' "$script"
    fi

    dir="${1-${CA_CERT_PATH-$(dirname "$CA_CERT_FILE")}}"
}

rehash_ca_certificate_files() (
    cd "$dir"
    c_rehash .
)

rehash_tls_ca_certificates() {
    umask 0022
    rehash_ca_certificate_files
}

usage() {
    cat <<EOF >&2
Usage: $script FILE
       $script -h
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf '%s\n' '' >&2
    usage
    exit 2
}

validate_platform() {
    case "$kernel_name" in
	(Linux)
	    case "$ID" in
		(centos)
		    case "$VERSION_ID" in
			(7)
			    :
			    ;;
			(8)
			    :
			    ;;
			(*)
			    abort_not_supported Release
			    ;;
		    esac
		    ;;
		(rhel|ol)
		    case "$VERSION_ID" in
			(7.*)
			    :
			    ;;
			(8.*)
			    :
			    ;;
			(*)
			    abort_not_supported Release
			    ;;
		    esac
		    ;;
		(rocky)
		    case "$VERSION_ID" in
			(8.*)
			    :
			    ;;
			(*)
			    abort_not_supported Release
			    ;;
		    esac
		    ;;
		(*)
		    abort_not_supported Distro
		    ;;
		esac
	    ;;
	(*)
	    abort_not_supported "Operating system"
	    ;;
    esac
}

script=$(basename "$0")

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}common-functions.sh"

set_user_profile "$script_dir"
eval $(get-os-release -x)
validate_platform
parse_arguments "$@"
rehash_tls_ca_certificates
