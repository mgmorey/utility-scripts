#!/bin/sh -eu

# install-scripts: install scripts
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

METHOD=symlink
MODE_EXEC=u=rwx,go=rx
MODE_NOEXEC=u=rw,go=r

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort '%s: Assertion failed: %s\n' "$script" "$*"
}

configure_platform() {
    if [ -n "$method" ]; then
	return
    fi

    case "$(uname -s)" in
	(CYGWIN_NT-*|MINGW64_NT-*)
	    method=install
	    ;;
	(*)
	    method=$METHOD
	    ;;
    esac
}

get_broken_links() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]
    find "$1" \
	 -maxdepth 1 \
	 -type l \
	 ! -exec test -e {} \; \
	 -print
}

get_library_files() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]
    find "$1" \
	 -maxdepth 1 \
	 '(' \
	 -name '*.ini' -o \
	 -name '*.sh' -o \
	 -name '*.txt' \
	 ')' \
	 -type f \
	 -print0
}

get_script_files() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]
    find "$1" \
	 -maxdepth 1 \
	 ! -name "$script" \
	 ! -name '*.ini' \
	 ! -name '*.sh' \
	 ! -name '*.txt' \
	 ! -name '*~' \
	 ! -name '.*' \
	 ! -name LICENSE \
	 ! -name README \
	 ! -name get-python-interpreter \
	 ! -name run-python \
	 -type f \
	 -print0
}

install_files() {
    xargs -0 "${script_prefix}install-files" -M $method ${mode:+-m $mode }"$target_dir"
}

install_library_files() {
    if [ $method = install ]; then
	mode=$MODE_NOEXEC
    else
	mode=
    fi

    get_library_files "$source_dir" | install_files
}

install_script_files() {
    if [ $method = install ]; then
	mode=$MODE_EXEC
    else
	mode=
    fi

    get_script_files "$source_dir" | install_files
}

install_scripts() {
    configure_platform
    real_user=$(get_real_user)
    validate_user_name $real_user
    source_dir=$(pwd)

    if ! is_valid_script_dirname "$source_dir"; then
	abort '%s: %s\n' \
	      "Please change to the source directory and try again" \
	      "$script"
    fi

    if [ -n "$target_dir" ]; then
	target_dir=$(cd "$target_dir" && pwd)
    else
	target_dir="$HOME/bin"
	mkdir -p "$target_dir"
	target_dir=$(cd "$target_dir" && pwd)
    fi

    install_library_files
    install_script_files
    remove_broken_links
}

is_valid_script_dirname() {
    if expr "${1-}" : '..*/..*-scripts$'; then
	true
    elif expr "${1-}" : '..*/scripts$'; then
	true
    else
	false
    fi >/dev/null
}

parse_arguments() {
    method=
    target_dir=

    while getopts cish opt; do
	case $opt in
	    (c)
		method=copy
		;;
	    (i)
		method=install
		;;
	    (s)
		method=symlink
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $# -gt 1 ]; then
	usage_error '%s: Too many arguments\n' "$script"
    fi

    if [ $# -gt 0 ]; then
	target_dir="$1"
    fi
}

remove_broken_links() {
    cd "$target_dir"
    broken_links="$(get_broken_links .)"

    if [ -n "$broken_links" ]; then
	printf 'Removing broken link: %s\n' $broken_links
	/bin/rm -f $broken_links
    fi
}

usage() {
    cat <<EOF >&2
Usage: $script [-c | -i | -s] [TARGET]
       $script -h
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf '%s\n' '' >&2
    usage
    exit 2
}

script=$(basename "$0")

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}common-functions.sh"

eval $("${script_prefix}get-os-release" -x)
parse_arguments "$@"
install_scripts
