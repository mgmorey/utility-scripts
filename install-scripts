#!/bin/sh -eu

# install-scripts: install scripts
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

FILEMODE_EXEC=u=rwx,go=rx
FILEMODE_NOEXEC=u=rw,go=r

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

configure_platform() {
    case "$(uname -s)" in
	(CYGWIN_NT-10.0|MINGW64_NT-10.0-*)
	    default_mode=copy
	    ;;
	(*)
	    default_mode=link
	    ;;
    esac
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

get_broken_links() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]
    find "$1" \
	 -maxdepth 1 \
	 -type l \
	 ! -exec test -e {} \; \
	 -print
}

get_library_files() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]
    find "$1" \
	 -maxdepth 1 \
	 -name '*.sh' \
	 -type f
}

get_script_files() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]
    find "$1" \
	 -maxdepth 1 \
	 ! -name LICENSE \
	 ! -name README \
	 ! -name install-root-scripts \
	 ! -name "$(basename "$0")" \
	 ! -name '*.*' \
	 ! -name '*~' \
	 -type f
}

install_files() {
    if [ -n "$files" ]; then
	case "${mode:-$default_mode}" in
	    (copy)
		case "$ID" in
		    (illumos)
			for file in $files; do
			    install -f "$target_dir" -m $filemode -s $file
			done
			;;
		    (*)
			install -m $filemode $files "$target_dir"
			;;
		esac
		;;
	    (link)
		ln -sf $files "$target_dir"
		;;
	esac
    fi
}

install_library_files() {
    filemode=$FILEMODE_NOEXEC
    files="$(get_library_files "$source_dir")"
    install_files
}

install_script_files() {
    filemode=$FILEMODE_EXEC
    files="$(get_script_files "$source_dir")"
    install_files
}

install_scripts() {
    configure_platform
    source_dir="$(get_realpath "$(pwd)")"

    case "$(basename "$source_dir")" in
	(scripts|*-scripts)
	    true
	    ;;
	(*)
	    abort "%s: Please change to the source directory and try again\n" "$0"
	    ;;
    esac

    if [ ! -e "$target_dir" ]; then
	mkdir -p "$target_dir"
    fi

    install_library_files
    install_script_files
    remove_broken_links
}

parse_arguments() {
    mode=

    while getopts clh opt; do
	case $opt in
	    (c)
		mode=copy
		;;
	    (l)
		mode=link
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		printf "%s\n" "" >&2
		usage
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $# -gt 1 ]; then
	abort "%s: Too many arguments\n" "$0"
    fi

    if [ $# -gt 0 ]; then
	target_dir="$1"
    else
	target_dir="$HOME/bin"
    fi
}

remove_broken_links() {
    cd "$target_dir"
    broken_links="$(get_broken_links .)"

    if [ -n "$broken_links" ]; then
	printf "Removing broken link: %s\n" $broken_links
	/bin/rm -f $broken_links
    fi
}

usage() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
	printf "%s\n" "" >&2
    fi

    cat <<-EOF >&2
	Usage: $0 [-c | -l] [TARGET]
	       $0 -h
	EOF
}

case "$0" in
    (*/*)
	script_dir=$(dirname "$0")
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$(get_realpath "$script_dir")/}

eval $("$script_dir/get-os-release" -X)
parse_arguments "$@"
install_scripts
