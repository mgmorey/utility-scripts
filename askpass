#!/bin/sh -eu

# askpass: configure or query askpass helper
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
    	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

parse_arguments() {
    is_query=false
    shell=$SHELL

    while getopts s:qh opt; do
	case $opt in
	    (s)
		shell=$OPTARG
		;;
	    (q)
		is_query=true
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		usage_error
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $is_query = true -a $# -gt 0 ]; then
	usage_error "%s: Too many arguments\n" "$0"
    elif [ $# -gt 0 ]; then
	commands="$*"
    else
	commands="git ssh sudo"
    fi
}

usage() {
    cat <<EOF >&2
Usage: $0 [-s SHELL] [COMMAND [COMMAND] ...]
       $0 -q
       $0 -h
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf "%s\n" '' >&2
    usage
    exit 2
}

case "$0" in
    (*/*)
	script_dir=$(dirname "$0")
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$(get_realpath "$script_dir")/}

parse_arguments "$@"

if [ $is_query = true ]; then
    "${script_prefix}get-askpass-helper"
else
    "${script_prefix}set-askpass-parameters" -s $shell ${commands-}
fi
