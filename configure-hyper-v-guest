#!/bin/sh -eu

# configure-hyper-v-guest: configure Hyper-V guest resolution
# Copyright (C) 2020  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

GRUB_COMMANDS="grubby update-grub grub2-mkconfig grub-mkconfig"
GRUB_DEFAULTS_FILE=/etc/default/grub
GRUB_DEFAULTS_VARS='\(GRUB_CMDLINE_LINUX\(\|_DEFAULT\)\)'
KERNEL_ARG='video=hyperv_fb:1920x1080'
SED_FORMAT='s/[ ]*%s//g
s/%s="\\(.*\\)"/\\1="\\3 %s"/
s/%s=" \\(.*\\)"/\\1="\\3"/'

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

configure_hyper_v_guest() {
    configure_platform
    update=$(get_grub_update_command)

    if [ -z "$update" ]; then
	abort "%s: No grub update command detected\n" "$0"
    fi

    if edit_grub_defaults "$GRUB_DEFAULTS_FILE"; then
	update_grub $update
    fi
}

configure_platform() {
    vendor=$(get_hypervisor_vendor || true)

    case "$vendor" in
	(Microsoft)
	    true
	    ;;
	('')
	    abort "%s: No hypervisor detected\n" "$0"
	    ;;
	(*)
	    abort "%s: %s hypervisor not supported\n" "$0" "$vendor"
	    ;;
    esac
}

edit_grub_defaults() {
    if [ -w "$1" ]; then
	options=-i
    elif [ -r "$1" ]; then
	options=
    else
	return 0
    fi

    expr=$(get_sed_expr "$GRUB_DEFAULTS_VARS" "$KERNEL_ARG")
    sed ${options:+$options }"$expr" "$1"
}

get_awk_command() {
    case "${kernel_name=$(uname -s)}" in
	(SunOS)
	    printf "%s\n" /usr/gnu/bin/awk
	    ;;
	(*)
	    printf "%s\n" /usr/bin/awk
	    ;;
    esac
}

get_grub_update_command() {
    for command in $GRUB_COMMANDS; do
	if which $command >/dev/null 2>&1; then
	    printf "%s\n" "$command"
	    break
	fi
    done
}

get_grub_update_options() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]

    case "$1" in
	(grub-mkconfig)
	    printf "%s\n" -o /boot/grub/grub.cfg
	    ;;
	(grub2-mkconfig)
	    printf "%s\n" -o /boot/grub2/grub.cfg
	    ;;
	(grubby)
	    printf "%s\n" --update-kernel=ALL --args="$KERNEL_ARG"
	    ;;
    esac
}

get_hypervisor_vendor() (
    awk="$(get_awk_command)"
    lscpu 2>/dev/null | $awk -f "${script_prefix}get-hypervisor-vendor"
)

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath || true)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

get_sed_expr() {
    assert [ $# -eq 2 ]
    assert [ -n "$2" ]
    printf "$SED_FORMAT\n" "$2" "$1" "$2" "$1"
}

update_grub() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]
    $1 $(get_grub_update_options $1)
}

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

configure_hyper_v_guest
