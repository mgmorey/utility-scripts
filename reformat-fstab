#!/bin/sh -eu

# reformat-fstab: align columns of configuration file /etc/fstab
# Copyright (C) 2025  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

abort() {
    printf "$@" >&2
    exit 1
}

reformat_fstab() {
    in_place=false
    suffix=".$$.$(date +%F@%T)~"

    while getopts is:h opt; do
	case $opt in
	    (i)
		in_place=true
		;;
	    (s)
		in_place=true
		suffix="$OPTARG"
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $in_place = true -a $# -lt 1 ]; then
	usage_error '%s: INPUT-FILE needed for in-place edit\n' "$script"
    fi

    tmpfile=$(mktemp)
    trap "/bin/rm -f \"$tmpfile\"" EXIT INT QUIT TERM

    if ! "$script_prefix$script.awk" "$@" >$tmpfile; then
	abort '%s: Script %s failed\n' "$script" "$script.awk"
    fi

    if [ ! -s $tmpfile ]; then
	abort '%s: Temporary output file %s is empty\n' "$script" "$tmpfile"
    fi

    if [ $in_place = true ]; then
	if [ ! -e "$1" -o ! -w "$1" ]; then
	    usage_error '%s: Output file %s is not writable\n' "$script" "$1"
	fi

	if [ -n "$suffix" ]; then
    	    /bin/mv -f "$1" "$1$suffix"
	fi

	/bin/mv -f $tmpfile "$1"
	chmod u=rw,go=r "$1"
    else
	cat $tmpfile
    fi
}

usage() {
    cat <<EOF >&2
Usage: $script [-i] [-s SUFFIX] [FILE]

Reformat fstab by aligning columns.
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf '%s\n' '' >&2
    usage
    exit 2
}

script=$(basename "$0")

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

reformat_fstab "${@}"
