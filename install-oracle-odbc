#!/bin/sh -eu

# install-oracle-odbc: install Oracle ODBC packages
# Copyright (C) 2020  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

COMPONENTS="basic odbc"
DRIVER_FILE=/etc/odbcinst.ini
MACHINE_TYPE_RPM=$(uname -m)
MACHINE_TYPE_ZIP=$(uname -m | sed 's/x86_64/x64/')

RPM_FORMAT="%s/oracle-instantclient%s-%s.0.0.0-1.$MACHINE_TYPE_RPM.rpm\n"
ZIP_FORMAT="%s/instantclient-%s-linux.${MACHINE_TYPE_ZIP}-%s.0.0.0dbru.zip\n"

abort() {
    printf "$@" >&2
    exit 1
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$0" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

cat_odbc_driver_entry() {
	cat <<EOF
[$DRIVER_NAME]
Description=$DRIVER_DESC
Driver=$DRIVER_OBJECT
Setup=
FileUsage=
CPTimeout=
CPReuse=

EOF
}

get_package_filename() {
    case "$ID" in
	(debian|ubuntu)
	    printf "$ZIP_FORMAT" "$(pwd)" "$1" "$CLIENT_VERSION"
	    ;;
	(rhel|ol)
	    printf "$RPM_FORMAT" "$(pwd)" "$CLIENT_VERSION" "$1"
	    ;;
    esac
}

get_package_filenames() {
    for component in basic odbc; do
	get_package_filename $component
    done
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

get_archive_dirname() {
    printf 'instantclient.%s' $CLIENT_VERSION
}

install_oracle_odbc() {
    validate_platform
    install-packages $(get-odbc-development-packages)
    install_platform
}

install_platform() {
    package_files=$(get_package_filenames)

    if [ -z "$package_files" ]; then
	return 0
    fi

    case "$ID" in
	(debian|ubuntu)
	    install_zip_files $package_files
	    ;;
	(rhel|ol)
	    install_rpm_files $package_files
	    ;;
    esac

    if ! grep "\[$DRIVER_NAME\]" $DRIVER_FILE >/dev/null 2>&1; then
	cat_odbc_driver_entry >$DRIVER_FILE
    fi
}

install_rpm_files() {
    rpm -iv $package_files
}

install_zip_files() (
    dirname=$(get_archive_dirname)
    /bin/rm -r /tmp/$dirname
    mkdir -p /tmp/$dirname
    cd /tmp

    for package_file in $package_files; do
	if [ -r $package_file ]; then
	    unzip $package_file
	fi
    done

    tmp_dirname=$(printf '%s\n' $dirname | tr '.' '_')
    /bin/cp -R $tmp_dirname/* /opt/oracle/$dirname
    /bin/rm -r $tmp_dirname
)

validate_platform() {
    case "$ID" in
	(debian)
	    case "$VERSION_ID" in
		(10)
		    return
		    ;;
	    esac
	    ;;
	(rhel|ol)
	    case "$VERSION_ID" in
		(8.1)
		    return
		    ;;
	    esac
	    ;;
	(ubuntu)
	    case "$VERSION_ID" in
		(18.04)
		    return
		    ;;
	    esac
	    ;;
    esac

    abort_not_supported "Operating system"
}

if [ $# -gt 0 ]; then
    abort "%s: Too many arguments\n" "$0"
fi

script_basename="$(basename "$0")"
script_dirname="$(get_realpath "$(dirname "$0")")"

. "$script_dirname/common-functions.sh"
. "$script_dirname/oracle-config.sh"

set_user_profile "$script_dirname"
eval $(get-os-release -x)
install_oracle_odbc
