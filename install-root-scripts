#!/bin/sh -eu

# install-root-scripts: install root scripts to /usr/local/bin
# Copyright (C) 2020  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

METHOD=install
MODE=u=rwx,go=rx

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort '%s: Assertion failed: %s\n' "$script" "$*"
}

get_install_command() {
    case "$ID" in
	(illumos)
	    which install
	    ;;
	(*)
	    which install
	    ;;
    esac
}

get_script_files() {
    assert [ $# -eq 1 ]
    assert [ -n "$1" ]
    find "$1" \
	 -maxdepth 1 \
	 '(' \
	 -name get-python-interpreter \
	 -o \
	 -name run-python \
	 ')' \
	 -type f
}

get_target_dir() {
    case "$ID" in
	(rhel|ol|centos)
	    printf '%s\n' /usr/sbin
	    ;;
	(*)
	    printf '%s\n' /usr/local/bin
	    ;;
    esac
}

install_files() {
    xargs "${script_prefix}install-files" -M $METHOD -m $MODE "$target_dir"
}

install_script_files() {
    get_script_files "$source_dir" | install_files
}

install_root_scripts() {
    source_dir=$(pwd)

    if ! is_valid_script_dirname "$source_dir"; then
	abort '%s: %s\n' \
	      "Please change to the source directory and try again" \
	      "$script"
    fi

    target_dir=$(cd "$target_dir" && pwd)
    install_script_files
}

is_valid_script_dirname() {
    if expr "${1-}" : '..*/..*-scripts$'; then
	true
    elif expr "${1-}" : '..*/scripts$'; then
	true
    else
	false
    fi >/dev/null
}

parse_arguments() {
    if [ $# -gt 1 ]; then
	usage_error '%s: Too many arguments\n' "$script"
    fi

    if [ $# -gt 0 ]; then
	target_dir="$1"
    else
	target_dir=$(get_target_dir)
    fi
}

usage_error() {
    printf "$@" >&2
    exit 2
}

script=$(basename "$0")

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

eval $("${script_prefix}get-os-release" -x)
parse_arguments "$@"
install_root_scripts
