#!/bin/sh -eu

# install-python-build-deps: install Python build dependencies
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

DEBIAN_PKG=python3-defaults

abort() {
    printf "$@" >&2
    exit 1
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$0" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

configure_platform() {
    package=

    for id in $ID $ID_LIKE; do
	case "$id" in
	    (debian)
		case "$VERSION_ID" in
		    (10)
			package=$DEBIAN_PKG
			;;
		    (*)
			break
			;;
		esac
		;;
	    (ubuntu)
		case "$VERSION_ID" in
		    (18.04)
			package=$DEBIAN_PKG
			;;
		    (20.04)
			package=$DEBIAN_PKG
			;;
		    (20.10)
			package=$DEBIAN_PKG
			;;
		    (*)
			break
			;;
		esac
		;;
	esac

	if [ -n "${package-}" ]; then
	    break
	fi
    done
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
    	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

install_python_build_deps() {
    validate_platform
    packages=$("${script_prefix}get-packages" python-build)
    pattern=$("${script_prefix}get-development-pattern")
    "${script_prefix}install-packages" ${pattern:+-p "$pattern" }$packages

    if [ -n "${package:-}" ]; then
	"${script_prefix}install-build-deps" "$@" $package || true
    fi
}

validate_platform() {
    for id in $ID $ID_LIKE; do
	case "$id" in
	    (amzn)
		case "$VERSION_ID" in
		    (2)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (centos)
		case "$VERSION_ID" in
		    (7)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (debian)
		case "$VERSION_ID" in
		    (10)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (fedora)
		case "$VERSION_ID" in
		    (32)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (opensuse)
	    	return
	    	;;
	    (rhel|ol)
		case "$VERSION_ID" in
		    (7.*)
			return
			;;
		    (8.*)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (ubuntu)
		case "$VERSION_ID" in
		    (18.04)
			return
			;;
		    (20.04)
			return
			;;
		    (20.10)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (freebsd)
		case "$VERSION_ID" in
		    (11.3-*)
			return
			;;
		    (12.1-*)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (illumos)
		case "$VERSION_ID" in
		    (2019.*)
			return
			;;
		    (2020.*)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (macos)
		return
    		;;
	    (netbsd)
		case "$VERSION_ID" in
		    (8.*)
			return
			;;
		    (9.*)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (solaris)
		case "$VERSION_ID" in
		    (11.4)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (windows)
		return
		;;
	esac
    done

    abort_not_supported "Operating system"
}

case "$0" in
    (*/*)
	script_dir=$(get_realpath "$(dirname "$0")")
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}common-functions.sh"

eval $("${script_prefix}get-os-release" -x)
install_python_build_deps "$@"
