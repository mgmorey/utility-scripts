#!/bin/sh -eu

# uninstall-docker: uninstall Docker packages
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

abort() {
    printf "$@" >&2
    exit 1
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$0" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

grep_docker() {
    grep -q '^\(docker\|docker.io\)$'
}

grep_docker_ce() {
    grep -q '^\(docker-ce\|docker-ce-cli\)$'
}

uninstall_docker() {
    case "$kernel_name" in
	(Linux|GNU)
	    case "$ID" in
		(debian|raspbian|ubuntu|linuxmint|neon)
		    :
		    ;;
		(opensuse-*)
		    :
		    ;;
		(fedora)
		    :
		    ;;
		(redhat|centos|ol)
		    :
		    ;;
		(*)
		    abort_not_supported Distro
		    ;;
	    esac
	    ;;
	(Darwin)
	    :
	    ;;
	(FreeBSD)
	    :
	    ;;
	(NetBSD)
	    :
	    ;;
	(SunOS)
	    :
	    ;;
	(*)
	    abort_not_supported "Operating system"
	    ;;
    esac

    installed_packages=$("$script_dir/get-installed-docker-packages")

    if printf "%s\n" $installed_packages | grep_docker; then
	printf "Removing native Docker packages\n"
    elif printf "%s\n" $installed_packages | grep_docker_ce; then
	printf "Removing Docker CE packages\n"
    else
	printf "No Docker package installed\n"
    fi

    if [ -n "$installed_packages" ]; then
	"$script_dir/uninstall-packages" $installed_packages
    fi
}

script_dir=$(get_realpath "$(dirname "$0")")

eval $("$script_dir/get-os-release" -X)

uninstall_docker "$@"
