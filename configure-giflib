#!/bin/sh -eu

# configure-giflib: download and configure giflib
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

if [ -z "${GIFLIB_PREFIX-}" ]; then
    GIFLIB_PREFIX=/usr/local
fi

if [ -z "${GIFLIB_VERSION-}" ]; then
    GIFLIB_VERSION=5.2.1
fi

abort() {
    printf "$@" >&2
    exit 1
}

abort_invalid_prefix() {
    usage "%s: invalid prefix -- %s\n" "$0" "$*"
    exit 2
}

abort_invalid_version() {
    usage "%s: invalid version -- %s\n" "$0" "$*"
    exit 2
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$0" "$PRETTY_NAME" "$*"
}

abort_too_many_arguments() {
    usage "%s: Too many arguments -- %s\n" "$0" "$*"
    exit 2
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

configure_giflib() {
    validate_platform
    parse_arguments "$@"
    basename=giflib-$GIFLIB_VERSION

    archive_dir="$HOME/Downloads/GIFLIB"
    src_dir="$HOME/Documents/src/giflib/$basename"

    filename=$basename.tar.gz

    pathname=$archive_dir/$filename

    mkdir -p "$(dirname "$src_dir")"
    extract_files
}

extract_files() {
    if [ ! -r "$src_dir/configure" ]; then
	cd "$(dirname "$src_dir")"

	case "$pathname" in
	    (*.tar.gz)
		gzip -dc "$pathname" | tar -xvf -
		;;
	    (*.tar.xz)
		xz -dc "$pathname" | tar -xvf -
		;;
	esac
    fi
}

get_realpath() (
    assert [ $# -ge 1 ]
    realpath=$(which realpath)

    if [ -n "$realpath" ]; then
	$realpath "$@"
    else
	for file; do
	    if expr "$file" : '/.*' >/dev/null; then
		printf "%s\n" "$file"
	    else
		printf "%s\n" "$PWD/${file#./}"
	    fi
	done
    fi
)

parse_arguments() {
    is_forcing=false

    while getopts fnp:v:xh opt; do
	case $opt in
	    (f)
		is_forcing=true
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		printf "%s\n" "" >&2
		usage
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))
}

usage() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
	printf "%s\n" "" >&2
    fi

    cat <<-EOF >&2
	Usage: $0 [-f]
	       $0 -h
	EOF
}

validate_platform() {
    for id in $ID $ID_LIKE; do
	case "$id" in
	    (debian)
		return
		;;
	    (opensuse)
		return
		;;
	    (rhel|fedora)
		return
		;;
	    (freebsd)
		return
		;;
	    (solaris)
		return
		;;
	    (windows)
		return
		;;
	esac
    done

    abort_not_supported "Operating system"
}

eval $(get-os-release -x)

configure_giflib "$@"
