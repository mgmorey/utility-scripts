#!/bin/sh -eu

# set-display-parameters: print shell commands to set display parameters
# Copyright (C) 2021  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

ALL_PARAMETERS="DISPLAY LIBGL_ALWAYS_INDIRECT"

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort '%s: Assertion failed: %s\n' "$script" "$*"
}

parse_arguments() {
    display=
    indirect=
    no_export=false
    shell=$SHELL

    while getopts d:i:ns:h opt; do
	case $opt in
	    (d)
		display=$OPTARG
		;;
	    (i)
		indirect=$OPTARG
		;;
	    (n)
		no_export=true
		;;
	    (s)
		parse_shell "$OPTARG"
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $# -gt 0 ]; then
	usage_error '%s: Too many arguments\n' "$script"
    fi
}

parse_shell() {
    case $(basename "${1%.exe}") in
	(*bash|ksh*|zsh)
	    shell=${1%.exe}
	    ;;
	(csh|tcsh)
	    shell=${1%.exe}
	    ;;
	(fish)
	    shell=${1%.exe}
	    ;;
	(sh)
	    shell=${1%.exe}
	    ;;
	(*)
	    usage_error '%s: %s: Unsupported shell\n' "$script" "$1"
	    ;;
    esac
}

print_parameter() {
    assert [ $# -gt 0 ]
    assert [ -n "$1" ]

    if [ -z "${2-}" ]; then
	continue
    elif [ "$no_export" = true ]; then
	printf '%s=%s\n' "$1" "$2"
    else
	case "$(basename ${shell%.exe})" in
	    (*bash|ksh*|zsh)
		printf 'export %s="%s"\n' "$1" "$2"
		;;
	    (csh|tcsh)
		printf 'setenv %s "%s";\n' "$1" "$2"
		;;
	    (fish)
		printf 'set -x %s "%s";\n' "$1" "$2"
		;;
	    (*)
		printf '%s="%s"\n' "$1" "$2"
		printf 'export %s\n' "$1"
		;;
	esac
    fi
}

print_parameters() {
    assert [ $# -gt 0 ]

    for var; do
	eval $(printf 'value="${%s-}"\n' "$var")
	print_parameter "$var" "$value"
    done
}

set_display_parameters() {
    if [ -n "${WSL_DISTRO_NAME-}" ]; then
	host=$($HOME/bin/get-nameserver /etc/resolv.conf)
    else
	host=localhost
    fi

    DISPLAY=$host${display:-:0.0}
    LIBGL_ALWAYS_INDIRECT=${indirect:-1}
    print_parameters $ALL_PARAMETERS
}

usage() {
    cat <<EOF >&2
Usage: $script: [-d DISPLAY] [-i] [-s SHELL]
       $script: -n [-d DISPLAY] [-i]
       $script: -h
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf '%s\n' '' >&2
    usage
    exit 2
}

script=$(basename "$0")
parse_arguments "$@"
set_display_parameters
