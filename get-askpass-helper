#!/bin/sh -eu

# get-askpass: print filename of SSH "askpass" helper binary
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

AWK_RE='\/.+\/(bin|lib|libexec)\/.+(askpass|askpass2)$'

abort() {
    printf "$@" >&2
    exit 1
}

abort_desktop_not_supported() {
    abort "%s: %s: Desktop not supported\n" "$script" "$desktop_name"
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$script" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$script" "$*"
}

configure_platform() {
    for id in $ID $ID_LIKE; do
	case "$id" in
	    (debian)
		break
		;;
	    (opensuse)
		break
		;;
	    (rhel|fedora)
		break
		;;
	    (freebsd)
		break
		;;
	    (macos)
		break
		;;
	    (netbsd)
		helper=/usr/X11R7/bin/ssh-askpass
		;;
	    (solaris)
		case "$desktop_name" in
		    (GNOME|MATE|'')
			helper=/usr/lib/ssh/ssh-askpass
			;;
		esac
		;;
	    (windows)
		case "$desktop_name" in
		    (MATE|X-Cygwin|'')
			helper=/usr/libexec/gnome-ssh-askpass
			;;
		esac
		;;
	esac

	if [ -n "${helper-}" ]; then
	    break
	fi
    done
}

get_askpass_helper() {
    configure_platform
    package=$("${script_prefix}get-askpass-package" $desktop_name)

    if [ -z "${helper:-}" -a -n "${package-}" ]; then
	helper=$(get_filenames $package 2>/dev/null | get_helper)
    fi

    if [ -n "${helper-}" ]; then
	if [ -n "${package:-}" ]; then
	    printf "# %s package %s:\n" "$PRETTY_NAME" $package
	fi

	printf "%s\n" "${helper%.exe}"
    fi
}

get_filenames() {
    "${script_prefix}get-package-filenames" $1
}

get_helper() {
    awk '$1 ~ /'"$AWK_RE"'/ {print $0; exit 0}'
}

parse_arguments() {
    while getopts h opt; do
	case $opt in
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $# -eq 1 ]; then
	desktop_name="$1"
    else
	desktop_name=$("${script_prefix}get-desktop-name")
    fi
}

usage() {
    cat <<EOF >&2
Usage: $script [DESKTOP-ENVIRONMENT]
       $script -h
EOF
}

script=$(basename "$0")

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

eval $("${script_prefix}get-os-release" -x)
parse_arguments "$@"
get_askpass_helper
