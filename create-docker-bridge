#!/bin/sh -eu

# create-docker-bridge: create Docker bridge network
# Copyright (C) 2020  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

create_docker_bridge() {
    docker network create $(get_options) $network
}

get_gw() {
    net=$(get_net $1)
    octet=$(get_octets $net 4)
    printf '%s.%s\n' $(get_octets $net 1,2,3) $((octet + 1))
}

get_net() {
    printf '%s\n' $1 | cut -d/ -f 1
}

get_octets() {
    printf '%s\n' $1 | cut -d. -f ${2:-1,2,3,4}
}

get_options() {
    if [ -n "${subnet-}" ]; then
	printf '%s\n' \
	       --subnet=$subnet \
	       --gateway=$(get_gw $subnet)
    elif [ -n "${interface-}" ]; then
	printf '%s\n' \
	       --ipam-driver=dhcp \
	       --ipam-opt=dhcp_interface=$interface \
	       --opt=parent=$interface
    else
	printf '%s\n' \
	       --ipam-driver=default
    fi
}

parse_arguments() {
    interface=
    subnet=

    while getopts ds:h opt; do
	case $opt in
	    (i)
		interface=$OPTARG
		;;
	    (s)
		subnet=$OPTARG
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		printf "%s\n" "" >&2
		usage
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))
    network=${1:-alternate}
}

usage() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
	printf "%s\n" "" >&2
    fi

    cat <<-EOF >&2
	Usage: $0 [-i INTERFACE] [NETWORK]
	       $0 [-s SUBNET] [NETWORK]
	       $0 -h
	EOF
}

parse_arguments "$@"
create_docker_bridge
