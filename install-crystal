#!/bin/sh -eu

# install-crystal: install Crystal programming language
# Copyright (C) 2019  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

BASE_URL=https://dist.crystal-lang.org

abort() {
    printf "$@" >&2
    exit 1
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$0" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

configure_platform() {
    url=

    case "$ID" in
	(debian|raspbian)
	    case "$VERSION_ID" in
		(10)
		    url=$BASE_URL/apt/setup.sh
		    ;;
	    esac
	    ;;
	(ubuntu)
	    url=$BASE_URL/apt/setup.sh
	    ;;
    esac
}

install_crystal() {
    validate_platform
    configure_platform
    preinstall_crystal
    install-packages crystal $(get-crystal-build-packages)
}

preinstall_crystal() {
    install-packages $(get-packages bootstrap)

    for id in $ID $ID_LIKE; do
	case "$id" in
	    (opensuse)
		if ! zypper lr Crystal >/dev/null 2>&1; then
		    rpm --import $BASE_URL/rpm/RPM-GPG-KEY
		    zypper ar -e -f $BASE_URL/rpm/ Crystal
		fi

		return
		;;
	esac
    done

    curl -sSL $url | bash
}

validate_platform() {
    case "$ID" in
	(debian|raspbian)
	    case "$VERSION_ID" in
		(10)
		    return
		    ;;
		(*)
		    abort_not_supported Release
		    ;;
	    esac
	    ;;
	(opensuse-*)
	    return
	    ;;
	(ubuntu)
	    case "$VERSION_ID" in
		(18.04)
		    return
		    ;;
		(20.04)
		    return
		    ;;
		(20.10)
		    return
		    ;;
		(*)
		    abort_not_supported Release
		    ;;
	    esac
	    ;;
    esac

    abort_not_supported "Operating system"
}

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}common-functions.sh"

set_user_profile "$script_dir"
eval $(get-os-release -x)
install_crystal
