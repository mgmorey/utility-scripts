#!/bin/sh -eu

# install-pyenv: install Python Version Manager
# Copyright (C) 2018  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

BASE_URL=https://github.com/pyenv

CATEGORIES="bootstrap python-build"

DEBIAN_PKG=python3-defaults

abort() {
    printf "$@" >&2
    exit 1
}

abort_not_supported() {
    abort "%s: %s: %s not supported\n" "$0" "$PRETTY_NAME" "$*"
}

assert() {
    "$@" || abort "%s: Assertion failed: %s\n" "$0" "$*"
}

configure_platform() {
    package=

    for id in $ID $ID_LIKE; do
	case "$id" in
	    (debian)
		case "$VERSION_ID" in
		    (10)
			package=$DEBIAN_PKG
			;;
		    (*)
			break
			;;
		esac
		;;
	    (ubuntu)
		case "$VERSION_ID" in
		    (18.04)
			package=$DEBIAN_PKG
			;;
		    (20.04)
			package=$DEBIAN_PKG
			;;
		    (20.10)
			package=$DEBIAN_PKG
			;;
		    (*)
			break
			;;
		esac
		;;
	esac

	if [ -n "${package-}" ]; then
	    break
	fi
    done
}

get_packages() {
    get-packages $CATEGORIES
}

install_dependencies() {
    for id in $ID $ID_LIKE; do
	case "$id" in
	    (windows)
		return 0
		;;
	esac
    done

    packages=$(get_packages)
    pattern=$(get-packages -s pattern development)
    install-packages ${pattern:+-p "$pattern" }$packages

    if [ -n "${package:-}" -a "$(id -u)" -eq 0 ]; then
	install-build-deps "$@" $package || true
    fi
}

install_pyenv() {
    url=$BASE_URL/pyenv-installer/raw/master/bin/pyenv-installer
    curl "$@" -L $url | bash
}

validate_platform() {
    for id in $ID $ID_LIKE; do
	case "$id" in
	    (amzn)
		case "$VERSION_ID" in
		    (2)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (centos)
		case "$VERSION_ID" in
		    (7)
			return
			;;
		    (8)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (debian)
		case "$VERSION_ID" in
		    (10)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (fedora)
		return
		;;
	    (opensuse)
		return
		;;
	    (rhel|ol)
		case "$VERSION_ID" in
		    (7.*)
			return
			;;
		    (8.*)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (ubuntu)
		case "$VERSION_ID" in
		    (18.04)
			return
			;;
		    (20.04)
			return
			;;
		    (20.10)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (freebsd)
		case "$VERSION_ID" in
		    (11.*)
			return
			;;
		    (12.*)
			return
			;;
		    (13.*)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (illumos)
		case "$VERSION_ID" in
		    (2019.*)
			return
			;;
		    (2020.*)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (macos)
		return
		;;
	    (netbsd)
		case "$VERSION_ID" in
		    (8.*)
			return
			;;
		    (9.*)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (solaris)
		case "$VERSION_ID" in
		    (11.4)
			return
			;;
		    (*)
			break
			;;
		esac
		;;
	    (windows)
		return
		;;
	esac

	if [ -n "${packages-}" ]; then
	    break
	fi
    done

    abort_not_supported "Operating system"
}

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

. "${script_prefix}common-functions.sh"
. "${script_prefix}utility-functions.sh"

set_user_profile "$script_dir"
eval $(get-os-release -x)
validate_platform
configure_platform

if [ "$(id -u)" -eq 0 ]; then
    install_dependencies
    run_unpriv "$0"
else
    install_dependencies
    install_pyenv "$@"
fi
